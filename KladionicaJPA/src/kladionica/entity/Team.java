package kladionica.entity;
// Generated May 4, 2018 6:56:20 PM by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Team generated by hbm2java
 */
@Entity
@Table(name = "team", catalog = "kladionica")
public class Team implements java.io.Serializable {

	private Integer idTeam;
	private String name;
	private String stadium;
	private String city;
	private Set<Match> matchesForHomeTeamIdTeam = new HashSet<Match>(0);
	private Set<Match> matchesForAwayTeamIdTeam = new HashSet<Match>(0);
	private Set<League> leagues = new HashSet<League>(0);

	public Team() {
	}

	public Team(String name, String stadium, String city, Set<Match> matchesForHomeTeamIdTeam,
			Set<Match> matchesForAwayTeamIdTeam, Set<League> leagues) {
		this.name = name;
		this.stadium = stadium;
		this.city = city;
		this.matchesForHomeTeamIdTeam = matchesForHomeTeamIdTeam;
		this.matchesForAwayTeamIdTeam = matchesForAwayTeamIdTeam;
		this.leagues = leagues;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idTeam", unique = true, nullable = false)
	public Integer getIdTeam() {
		return this.idTeam;
	}

	public void setIdTeam(Integer idTeam) {
		this.idTeam = idTeam;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "stadium", length = 45)
	public String getStadium() {
		return this.stadium;
	}

	public void setStadium(String stadium) {
		this.stadium = stadium;
	}

	@Column(name = "city", length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "teamByHomeTeamIdTeam")
	public Set<Match> getMatchesForHomeTeamIdTeam() {
		return this.matchesForHomeTeamIdTeam;
	}

	public void setMatchesForHomeTeamIdTeam(Set<Match> matchesForHomeTeamIdTeam) {
		this.matchesForHomeTeamIdTeam = matchesForHomeTeamIdTeam;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "teamByAwayTeamIdTeam")
	public Set<Match> getMatchesForAwayTeamIdTeam() {
		return this.matchesForAwayTeamIdTeam;
	}

	public void setMatchesForAwayTeamIdTeam(Set<Match> matchesForAwayTeamIdTeam) {
		this.matchesForAwayTeamIdTeam = matchesForAwayTeamIdTeam;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "team_has_league", catalog = "kladionica", joinColumns = {
			@JoinColumn(name = "Team_idTeam", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "League_idLeague", nullable = false, updatable = false) })
	public Set<League> getLeagues() {
		return this.leagues;
	}

	public void setLeagues(Set<League> leagues) {
		this.leagues = leagues;
	}

}
